name: Build Linux App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq wget fuse libfuse2 desktop-file-utils

      - name: Install Neutralino CLI
        run: npm install -g @neutralinojs/neu

      - name: Install frontend dependencies
        run: |
          cd www
          pnpm install

      - name: Copy build scripts
        run: |
          git clone https://github.com/hschneider/neutralino-build-scripts.git build-scripts
          cp build-scripts/build-linux.sh ./
          cp build-scripts/preproc-linux.sh ./
          cp build-scripts/postproc-linux.sh ./
          cp -r build-scripts/_app_scaffolds ./
          chmod +x build-linux.sh preproc-linux.sh postproc-linux.sh

      - name: Build Neutralino app for Linux
        run: ./build-linux.sh

      - name: Download linuxdeploy and appimagetool
        run: |
          mkdir -p appimage-tools
          cd appimage-tools
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage appimagetool-x86_64.AppImage

      - name: Create AppImages
        run: |
          cd dist

          # Create AppImage for x64
          if [ -d "linux_x64" ]; then
            mkdir -p appimage-x64/usr/bin
            mkdir -p appimage-x64/usr/share/applications
            mkdir -p appimage-x64/usr/share/icons/hicolor/256x256/apps

            # Copy binary and resources
            cp linux_x64/Pucoti/pucoti-linux_x64 appimage-x64/usr/bin/pucoti
            cp linux_x64/Pucoti/resources.neu appimage-x64/usr/bin/
            if [ -d "linux_x64/Pucoti/extensions" ]; then
              cp -r linux_x64/Pucoti/extensions appimage-x64/usr/bin/
            fi

            # Copy icon and desktop file
            cp linux_x64/Pucoti/pucoti.png appimage-x64/usr/share/icons/hicolor/256x256/apps/pucoti.png
            cp linux_x64/Pucoti/Pucoti.desktop appimage-x64/usr/share/applications/pucoti.desktop

            # Update desktop file for AppImage
            sed -i 's|Exec=.*|Exec=pucoti|g' appimage-x64/usr/share/applications/pucoti.desktop
            sed -i 's|Icon=.*|Icon=pucoti|g' appimage-x64/usr/share/applications/pucoti.desktop
            sed -i '/^Encoding=/d' appimage-x64/usr/share/applications/pucoti.desktop
            echo "Categories=Utility;" >> appimage-x64/usr/share/applications/pucoti.desktop

            # Create AppRun script
            cat > appimage-x64/AppRun << 'EOF'
          #!/bin/bash
          SELF=$(readlink -f "$0")
          HERE=${SELF%/*}
          export PATH="${HERE}/usr/bin/:${PATH}"
          cd "${HERE}/usr/bin"
          exec "${HERE}/usr/bin/pucoti" "$@"
          EOF
            chmod +x appimage-x64/AppRun

            # Create desktop file in root
            cp appimage-x64/usr/share/applications/pucoti.desktop appimage-x64/

            # Create icon link in root
            ln -sf usr/share/icons/hicolor/256x256/apps/pucoti.png appimage-x64/pucoti.png

            # Build AppImage
            ARCH=x86_64 ../appimage-tools/appimagetool-x86_64.AppImage appimage-x64 pucoti-linux-x64.AppImage
          fi

          # Create AppImage for arm64
          if [ -d "linux_arm64" ]; then
            mkdir -p appimage-arm64/usr/bin
            mkdir -p appimage-arm64/usr/share/applications
            mkdir -p appimage-arm64/usr/share/icons/hicolor/256x256/apps

            # Copy binary and resources
            cp linux_arm64/Pucoti/pucoti-linux_arm64 appimage-arm64/usr/bin/pucoti
            cp linux_arm64/Pucoti/resources.neu appimage-arm64/usr/bin/
            if [ -d "linux_arm64/Pucoti/extensions" ]; then
              cp -r linux_arm64/Pucoti/extensions appimage-arm64/usr/bin/
            fi

            # Copy icon and desktop file
            cp linux_arm64/Pucoti/pucoti.png appimage-arm64/usr/share/icons/hicolor/256x256/apps/pucoti.png
            cp linux_arm64/Pucoti/Pucoti.desktop appimage-arm64/usr/share/applications/pucoti.desktop

            # Update desktop file for AppImage
            sed -i 's|Exec=.*|Exec=pucoti|g' appimage-arm64/usr/share/applications/pucoti.desktop
            sed -i 's|Icon=.*|Icon=pucoti|g' appimage-arm64/usr/share/applications/pucoti.desktop
            sed -i '/^Encoding=/d' appimage-arm64/usr/share/applications/pucoti.desktop
            echo "Categories=Utility;" >> appimage-arm64/usr/share/applications/pucoti.desktop

            # Create AppRun script
            cat > appimage-arm64/AppRun << 'EOF'
          #!/bin/bash
          SELF=$(readlink -f "$0")
          HERE=${SELF%/*}
          export PATH="${HERE}/usr/bin/:${PATH}"
          cd "${HERE}/usr/bin"
          exec "${HERE}/usr/bin/pucoti" "$@"
          EOF
            chmod +x appimage-arm64/AppRun

            # Create desktop file in root
            cp appimage-arm64/usr/share/applications/pucoti.desktop appimage-arm64/

            # Create icon link in root
            ln -sf usr/share/icons/hicolor/256x256/apps/pucoti.png appimage-arm64/pucoti.png

            # Note: We can't build ARM64 AppImages on x64 runners, so we'll create a tar instead
            tar -czf pucoti-linux-arm64-appimage-content.tar.gz -C appimage-arm64 .
          fi

          # Create AppImage for armhf
          if [ -d "linux_armhf" ]; then
            mkdir -p appimage-armhf/usr/bin
            mkdir -p appimage-armhf/usr/share/applications
            mkdir -p appimage-armhf/usr/share/icons/hicolor/256x256/apps

            # Copy binary and resources
            cp linux_armhf/Pucoti/pucoti-linux_armhf appimage-armhf/usr/bin/pucoti
            cp linux_armhf/Pucoti/resources.neu appimage-armhf/usr/bin/
            if [ -d "linux_armhf/Pucoti/extensions" ]; then
              cp -r linux_armhf/Pucoti/extensions appimage-armhf/usr/bin/
            fi

            # Copy icon and desktop file
            cp linux_armhf/Pucoti/pucoti.png appimage-armhf/usr/share/icons/hicolor/256x256/apps/pucoti.png
            cp linux_armhf/Pucoti/Pucoti.desktop appimage-armhf/usr/share/applications/pucoti.desktop

            # Update desktop file for AppImage
            sed -i 's|Exec=.*|Exec=pucoti|g' appimage-armhf/usr/share/applications/pucoti.desktop
            sed -i 's|Icon=.*|Icon=pucoti|g' appimage-armhf/usr/share/applications/pucoti.desktop
            sed -i '/^Encoding=/d' appimage-armhf/usr/share/applications/pucoti.desktop
            echo "Categories=Utility;" >> appimage-armhf/usr/share/applications/pucoti.desktop

            # Create AppRun script
            cat > appimage-armhf/AppRun << 'EOF'
          #!/bin/bash
          SELF=$(readlink -f "$0")
          HERE=${SELF%/*}
          export PATH="${HERE}/usr/bin/:${PATH}"
          cd "${HERE}/usr/bin"
          exec "${HERE}/usr/bin/pucoti" "$@"
          EOF
            chmod +x appimage-armhf/AppRun

            # Create desktop file in root
            cp appimage-armhf/usr/share/applications/pucoti.desktop appimage-armhf/

            # Create icon link in root
            ln -sf usr/share/icons/hicolor/256x256/apps/pucoti.png appimage-armhf/pucoti.png

            # Note: We can't build ARMHF AppImages on x64 runners, so we'll create a tar instead
            tar -czf pucoti-linux-armhf-appimage-content.tar.gz -C appimage-armhf .
          fi

      - name: Create release archives
        run: |
          cd dist

          # Create archives for traditional bundles
          if [ -d "linux_x64" ]; then
            tar -czf pucoti-linux-x64.tar.gz linux_x64/
          fi
          if [ -d "linux_arm64" ]; then
            tar -czf pucoti-linux-arm64.tar.gz linux_arm64/
          fi
          if [ -d "linux_armhf" ]; then
            tar -czf pucoti-linux-armhf.tar.gz linux_armhf/
          fi

      - name: Upload x64 bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-x64-bundle
          path: webapp/dist/pucoti-linux-x64.tar.gz
          retention-days: 30
        if: always()

      - name: Upload arm64 bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-arm64-bundle
          path: webapp/dist/pucoti-linux-arm64.tar.gz
          retention-days: 30
        if: always()

      - name: Upload armhf bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-armhf-bundle
          path: webapp/dist/pucoti-linux-armhf.tar.gz
          retention-days: 30
        if: always()

      - name: Upload x64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-x64-appimage
          path: webapp/dist/pucoti-linux-x64.AppImage
          retention-days: 30
        if: always()

      - name: Upload arm64 AppImage content
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-arm64-appimage-content
          path: webapp/dist/pucoti-linux-arm64-appimage-content.tar.gz
          retention-days: 30
        if: always()

      - name: Upload armhf AppImage content
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-armhf-appimage-content
          path: webapp/dist/pucoti-linux-armhf-appimage-content.tar.gz
          retention-days: 30
        if: always()

      - name: Upload individual app bundles
        uses: actions/upload-artifact@v4
        with:
          name: pucoti-linux-app-bundles
          path: |
            webapp/dist/linux_x64/Pucoti
            webapp/dist/linux_arm64/Pucoti
            webapp/dist/linux_armhf/Pucoti
          retention-days: 30
        if: always()
